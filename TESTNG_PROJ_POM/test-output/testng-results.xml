<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-07T19:10:06 IST" name="Suite" finished-at="2023-08-07T19:11:30 IST" duration-ms="83901">
    <groups>
    </groups>
    <test started-at="2023-08-07T19:10:06 IST" name="Test" finished-at="2023-08-07T19:11:30 IST" duration-ms="83901">
      <class name="SauceDemo.TestCases.UsingDataProviderLogin">
        <test-method is-config="true" signature="Launch_Browser()[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:09:48 IST" name="Launch_Browser" finished-at="2023-08-07T19:10:06 IST" duration-ms="18189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Launch_Browser -->
        <test-method is-config="true" signature="UrL_Launch()[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:10:13 IST" name="UrL_Launch" finished-at="2023-08-07T19:10:16 IST" duration-ms="2815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UrL_Launch -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:10:17 IST" name="login" data-provider="LoginData" finished-at="2023-08-07T19:10:17 IST" duration-ms="618" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at SauceDemo.TestCases.UsingDataProviderLogin.login(UsingDataProviderLogin.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="UrL_Launch()[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:10:18 IST" name="UrL_Launch" finished-at="2023-08-07T19:10:19 IST" duration-ms="425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UrL_Launch -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:10:19 IST" name="login" data-provider="LoginData" finished-at="2023-08-07T19:10:20 IST" duration-ms="1517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="UrL_Launch()[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:10:20 IST" name="UrL_Launch" finished-at="2023-08-07T19:10:21 IST" duration-ms="522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UrL_Launch -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:10:21 IST" name="login" data-provider="LoginData" finished-at="2023-08-07T19:10:22 IST" duration-ms="1282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[problem_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="UrL_Launch()[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:10:22 IST" name="UrL_Launch" finished-at="2023-08-07T19:10:22 IST" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UrL_Launch -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:10:22 IST" name="login" data-provider="LoginData" finished-at="2023-08-07T19:10:23 IST" duration-ms="871" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[locked_out_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="UrL_Launch()[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:10:23 IST" name="UrL_Launch" finished-at="2023-08-07T19:10:23 IST" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UrL_Launch -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:10:23 IST" name="login" data-provider="LoginData" finished-at="2023-08-07T19:10:29 IST" duration-ms="6051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[performance_glitch_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="tearDown_Browser()[pri:0, instance:SauceDemo.TestCases.UsingDataProviderLogin@466276d8]" started-at="2023-08-07T19:11:31 IST" name="tearDown_Browser" finished-at="2023-08-07T19:11:34 IST" duration-ms="3527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown_Browser -->
      </class> <!-- SauceDemo.TestCases.UsingDataProviderLogin -->
      <class name="SauceDemo.TestCases.LoginWithstandardUser">
        <test-method is-config="true" signature="UrL_Launch()[pri:0, instance:SauceDemo.TestCases.LoginWithstandardUser@38aa816f]" started-at="2023-08-07T19:10:29 IST" name="UrL_Launch" finished-at="2023-08-07T19:10:30 IST" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UrL_Launch -->
        <test-method signature="Standard_user()[pri:0, instance:SauceDemo.TestCases.LoginWithstandardUser@38aa816f]" started-at="2023-08-07T19:10:30 IST" name="Standard_user" finished-at="2023-08-07T19:11:28 IST" duration-ms="58616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Standard_user -->
        <test-method is-config="true" signature="UrL_Launch()[pri:0, instance:SauceDemo.TestCases.LoginWithstandardUser@38aa816f]" started-at="2023-08-07T19:11:28 IST" name="UrL_Launch" finished-at="2023-08-07T19:11:29 IST" duration-ms="1193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UrL_Launch -->
        <test-method signature="problem_user()[pri:0, instance:SauceDemo.TestCases.LoginWithstandardUser@38aa816f]" started-at="2023-08-07T19:11:29 IST" name="problem_user" finished-at="2023-08-07T19:11:30 IST" duration-ms="912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problem_user -->
      </class> <!-- SauceDemo.TestCases.LoginWithstandardUser -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
